# MIT License
#
# Copyright (c) 2023 Matheus Pimenta
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gke-metadata-server
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: gke-metadata-server
  template:
    metadata:
      labels:
        app: gke-metadata-server
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      hostNetwork: true
      serviceAccountName: gke-metadata-server
      priorityClassName: system-node-critical
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
      tolerations:
      - key: iam.gke.io/gke-metadata-server-enabled
        operator: Equal
        value: "true"
        effect: NoExecute
      containers:
      - name: gke-metadata-server
        {{- if .Values.image.digest }}
        image: {{ .Values.image.repository }}@{{ .Values.image.digest }}
        {{- else }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          privileged: true
        args:
        - server
        - --project-id={{ .Values.config.projectID }}
        - --workload-identity-provider={{ .Values.config.workloadIdentityProvider }}
        {{- if .Values.config.serverPort }}
        - --server-port={{ .Values.config.serverPort }}
        {{- end }}
        {{- if .Values.config.healthPort }}
        - --health-port={{ .Values.config.healthPort }}
        {{- end }}
        {{- if .Values.config.logLevel }}
        - --log-level={{ .Values.config.logLevel }}
        {{- end }}
        {{- if (.Values.config.watchPods | default dict).enable }}
        - --watch-pods
        {{- if .Values.config.watchPods.disableFallback }}
        - --watch-pods-disable-fallback
        {{- end }}
        {{- if .Values.config.watchPods.resyncPeriod }}
        - --watch-pods-resync-period={{ .Values.config.watchPods.resyncPeriod }}
        {{- end }}
        {{- end }}
        {{- if (.Values.config.watchNode | default dict).enable }}
        - --watch-node
        {{- if .Values.config.watchNode.disableFallback }}
        - --watch-node-disable-fallback
        {{- end }}
        {{- if .Values.config.watchNode.resyncPeriod }}
        - --watch-node-resync-period={{ .Values.config.watchNode.resyncPeriod }}
        {{- end }}
        {{- end }}
        {{- if (.Values.config.watchServiceAccounts | default dict).enable }}
        - --watch-service-accounts
        {{- if .Values.config.watchServiceAccounts.disableFallback }}
        - --watch-service-accounts-disable-fallback
        {{- end }}
        {{- if .Values.config.watchServiceAccounts.resyncPeriod }}
        - --watch-service-accounts-resync-period={{ .Values.config.watchServiceAccounts.resyncPeriod }}
        {{- end }}
        {{- end }}
        {{- if (.Values.config.cacheTokens | default dict).enable }}
        - --cache-tokens
        {{- if .Values.config.cacheTokens.concurrency }}
        - --cache-tokens-concurrency={{ .Values.config.cacheTokens.concurrency }}
        {{- end }}
        {{- end }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: health
          containerPort: {{ .Values.config.healthPort }}
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 3
          httpGet:
            path: /healthz
            port: health
        readinessProbe:
          initialDelaySeconds: 3
          httpGet:
            path: /readyz
            port: health
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
