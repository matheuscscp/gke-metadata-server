# MIT License
#
# Copyright (c) 2023 Matheus Pimenta
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


# This file is not only a core part of our test automation in this project,
# but also an example of how to configure Pods in a cluster where the emulator
# is deployed. Use this as reference for how to configure your production Pods.


# ServiceAccount configuration is the exact same of Workload Identity Federation for GKE.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-impersonated
  namespace: default
  annotations:
    # If you want to impersonate a GCP Service Account, you must set this annotation.
    # Impersonation is required for using the Identity API (to get Google OIDC Tokens
    # for the impersonated GCP Service Account):
    #   GET /computeMetadata/v1/instance/service-accounts/default/identity
    iam.gke.io/gcp-service-account: test-sa@gke-metadata-server.iam.gserviceaccount.com
---
# If you are granting direct resource access, the annotation is not needed. Some GCP services
# may have limitations and not support direct resource access. See docs:
#   * https://cloud.google.com/iam/docs/workload-identity-federation-with-kubernetes#use-wlif
#   * https://cloud.google.com/iam/docs/federated-identity-supported-services#list
# The Identity API is not supported by this method.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test
  namespace: default
---
apiVersion: v1
kind: Pod
metadata:
  name: <POD_NAME>
  namespace: default
spec:
  serviceAccountName: <SERVICE_ACCOUNT> # Use the ServiceAccount created above.
  # This DNS record is required because the Google libraries hardcode the metadata server
  # address as the hostname "metadata.google.internal". Sometimes they also hardcode the
  # IP address. Sometimes they only hardcode the IP address, in which case this setting
  # would not be needed. It all depends on what library your Pod is using. Test it!
  # The emulator uses eBPF magic üêù to redirect traffic from your Pods targeting this IP
  # address to the emulator.
  hostAliases:
  - hostnames: [metadata.google.internal]
    ip: 169.254.169.254

  ################################################################################
  # Note: All the configuration below is test-only and not needed in production. #
  ################################################################################

  restartPolicy: Never
  hostNetwork: <HOST_NETWORK>
  dnsPolicy: ClusterFirstWithHostNet
  containers:
  - name: test
    image: ghcr.io/matheuscscp/gke-metadata-server/test@<GO_TEST_DIGEST>
<NODE_SELECTOR_AND_TOLERATIONS>