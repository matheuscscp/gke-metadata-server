# MIT License
#
# Copyright (c) 2023 Matheus Pimenta
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

on: [pull_request]

concurrency:
  group: continuous-integration # lock for shared CI resources
  cancel-in-progress: false

jobs:
  pull-request:
    runs-on: ubuntu-latest
    environment: pull-request
    permissions:
      contents: read
      id-token: write
      packages: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
    - id: ci-checks
      uses: ./.github/actions/ci-checks/
      with:
        google-service-account-name: pull-request
        github-token: ${{ secrets.GITHUB_TOKEN }}
        cache-key: pull-request-${{ github.event.pull_request.number }}
    - name: Comment new releases in the PR
      uses: actions/github-script@v7
      env:
        RELEASE_CONTAINER: ${{ steps.ci-checks.outputs.release-container }}
        RELEASE_HELM: ${{ steps.ci-checks.outputs.release-helm }}
      with:
        script: |
          const fs = require('fs')
          const containerVersion = fs.readFileSync('container-version.txt').toString().trim()
          const helmVersion = fs.readFileSync('helm-version.txt').toString().trim()

          const { RELEASE_CONTAINER, RELEASE_HELM } = process.env
          const msgs = []
          if (RELEASE_CONTAINER === 'yes') {
            msgs.push(`This pull request will release version \`${containerVersion}\` of the Container.`)
          }
          if (RELEASE_HELM === 'yes') {
            msgs.push(`This pull request will release version \`${helmVersion}\` of the Helm Chart.`)
          }
          if (msgs.length === 0) {
            return
          }

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: msgs.join('\n\n'),
          })
