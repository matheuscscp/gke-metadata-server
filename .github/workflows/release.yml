# MIT License
#
# Copyright (c) 2023 Matheus Pimenta
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

on:
  push:
    branches: [main]
  workflow_dispatch: # for manual trigger in the UI

concurrency:
  group: continuous-integration # pull-request and release share resources
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
    - uses: actions/checkout@v4
    - id: ci-checks
      uses: ./.github/actions/ci-checks/
      with:
        google-service-account-name: release
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: sigstore/cosign-installer@v3.3.0
    - name: Release container in GitHub Container Registry
      if: steps.ci-checks.outputs.release-container == 'yes'
      uses: ./.github/actions/release-container/
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ steps.ci-checks.outputs.ghcr-container }}
        version: ${{ steps.ci-checks.outputs.container-version }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Release container in Docker Hub
      if: steps.ci-checks.outputs.release-container == 'yes'
      uses: ./.github/actions/release-container/
      with:
        registry: registry.hub.docker.com
        username: matheuscscp
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        repository: ${{ steps.ci-checks.outputs.dockerhub-container }}
        version: ${{ steps.ci-checks.outputs.container-version }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Release Helm Chart in GitHub Container Registry
      if: steps.ci-checks.outputs.release-helm == 'yes'
      uses: ./.github/actions/release-helm/
      with:
        username: ${{ github.actor }}
        access-token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ steps.ci-checks.outputs.ghcr-helm }}
        version: ${{ steps.ci-checks.outputs.helm-version }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Release Helm Chart in Docker Hub
      if: steps.ci-checks.outputs.release-helm == 'yes'
      uses: ./.github/actions/release-helm/
      with:
        username: matheuscscp
        access-token: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        repository: ${{ steps.ci-checks.outputs.dockerhub-helm }}
        version: ${{ steps.ci-checks.outputs.helm-version }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - run: go build -o gke-metadata-server-linux-amd64 github.com/matheuscscp/gke-metadata-server/cmd
      env:
        GOOS: linux
        GOARCH: amd64
    - name: Publish Release
      if: steps.ci-checks.outputs.release-container == 'yes' || steps.ci-checks.outputs.release-helm == 'yes'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CONTAINER_VERSION: ${{ steps.ci-checks.outputs.container-version }}
        HELM_VERSION: ${{ steps.ci-checks.outputs.helm-version }}
      run: |
        gh release create "container-v${CONTAINER_VERSION}-helm-v${HELM_VERSION}" \
          gke-metadata-server-linux-amd64 \
          --repo="$GITHUB_REPOSITORY" \
          --generate-notes \
          --latest
