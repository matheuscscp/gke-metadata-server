# MIT License
#
# Copyright (c) 2023 Matheus Pimenta
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

inputs:
  registry:
    required: true

outputs:
  release-helm:
    value: ${{ steps.release-check.outputs.release-helm }}
  release-timoni:
    value: ${{ steps.release-check.outputs.release-timoni }}
  release-container:
    value: ${{ steps.release-check.outputs.release-container }}
  new-releases:
    value: ${{ steps.release-check.outputs.new-releases }}

runs:
  using: composite
  steps:
  - name: Check new releases
    id: release-check
    shell: bash
    env:
      registry: ${{ inputs.registry }}
    run: |
      profile_url=${registry}/matheuscscp
      oci_url=oci://${profile_url}

      helm_image=${oci_url}/gke-metadata-server-helm
      timoni_image=${oci_url}/gke-metadata-server-timoni
      container_image=${profile_url}/gke-metadata-server:$(yq .container versions.yaml)

      helm_version=$(yq .helm versions.yaml)
      timoni_version=$(yq .timoni versions.yaml)

      release_helm=$(helm pull $helm_image --version $helm_version > /dev/null && echo no || echo yes)
      release_timoni=$(timoni mod pull $timoni_image --version $timoni_version -o ./timoni-check > /dev/null && echo no || echo yes); rm -rf ./timoni-check
      release_container=$(docker pull $container_image > /dev/null && echo no || echo yes)

      echo release-helm=$release_helm >> $GITHUB_OUTPUT
      echo release-timoni=$release_timoni >> $GITHUB_OUTPUT
      echo release-container=$release_container >> $GITHUB_OUTPUT

      if [ "$release_helm" == "yes" ] || [ "$release_timoni" == "yes" ] || [ "$release_container" == "yes" ]; then
        echo new-releases=yes >> $GITHUB_OUTPUT
      else
        echo new-releases=no >> $GITHUB_OUTPUT
      fi

      if [ "$release_container" == "yes" ]; then
        if [ "$release_helm" == "no" ] || [ "$release_timoni" == "no" ]; then
          echo "When releasing a new container image, must also release new versions of the Helm Chart and Timoni Module."
          exit 1
        fi
      fi
